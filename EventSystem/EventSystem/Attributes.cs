namespace EventSystem;

public static class Attributes
{
    public const string Namespace = "Generators";
    public const string EventAttributeName = "EventAttribute";
    public const string EventAttributeMetadataName = $"{Namespace}.{EventAttributeName}";
    public const string EventAttributeTypeArgName = "handlerType";
    
    public const string HandlerAttributeName = "EventHandlerAttribute";
    public const string HandlerAttributeMetadataName = $"{Namespace}.{HandlerAttributeName}";

    public const string AttributesFileName = "EventAttributes.g.cs";
    
    public const string AttributesSourceCode = $@"// <auto-generated/>
namespace {Namespace}
{{
    /// <summary>
    /// Tags a struct as an event to be stored in the correspondent EventSystem class.
    /// The EventSystem class must be tagged with the {HandlerAttributeName} attribute.
    /// </summary>
    [System.AttributeUsage(System.AttributeTargets.Struct)]
    public class {EventAttributeName} : System.Attribute
    {{
        public System.Type HandlerType {{ get; }}
        public {EventAttributeName}(System.Type {EventAttributeTypeArgName})
        {{
            HandlerType = handlerType;
        }}
    }}

    /// <summary>
    /// Tags a class as an event system to be store events generated
    /// from structs tagged with the {EventAttributeName} attribute.
    /// </summary>
    [System.AttributeUsage(System.AttributeTargets.Class)]
    public class {HandlerAttributeName} : System.Attribute
    {{
    }}
}}";
}